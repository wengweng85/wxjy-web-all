##
# CAS Server Context Configuration
#
server.context-path=/cas
server.port=8443

#SSL配置
#cas.server.name=https://sso.anumbrella.com:8443
#cas.server.prefix=https://sso.anumbrella.com:8443/cas
server.ssl.enabled=true
server.ssl.key-store=classpath:thekeystore
server.ssl.key-store-password=changeit
server.ssl.key-password=changeit
server.ssl.keyAlias=caskeystore

server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.include-stacktrace=ALWAYS

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.min-spare-threads=10
server.tomcat.max-threads=200
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false

# Indicates that systemPropertiesOverride can be used.
# Set to false to prevent users from changing the default accidentally. Default true.
spring.cloud.config.allow-override=true

# External properties should override system properties.
spring.cloud.config.override-system-properties=false

# When allowOverride is true, external properties should take lowest priority, and not override any
# existing property sources (including local config files).
spring.cloud.config.override-none=false

# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

# Control the security of the management/actuator endpoints
# The 'enabled' flag below here controls the rendering of details for the health endpoint amongst other things.
management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

# Define a CAS-specific "WARN" status code and its order
management.health.status.order=WARN, DOWN, OUT_OF_SERVICE, UNKNOWN, UP

# Control the security of the management/actuator endpoints
# With basic authentication, assuming Spring Security and/or relevant modules are on the classpath.
security.basic.authorize-mode=role
security.basic.path=/cas/status/**
# security.basic.enabled=true
# security.user.name=casuser
# security.user.password=

##
# CAS Web Application Session Configuration
#
server.session.timeout=300
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE

##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.template-resolver-order=100
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

##
# CAS Authentication Credentials
#
#cas.authn.accept.users=casuser::Mellon

##
# JDBC配置
#
##查询账号密码SQL，必须包含密码字段
#cas.authn.jdbc.query[0].sql=select * from user where username=?
#
##指定上面的SQL查询字段名（必须）
#cas.authn.jdbc.query[0].fieldPassword=password
#
##指定过期字段，1为过期，若过期不可用
#cas.authn.jdbc.query[0].fieldExpired=expired
#
##为不可用字段段，1为不可用，需要修改密码
#cas.authn.jdbc.query[0].fieldDisabled=disabled
#
##数据库连接
#cas.authn.jdbc.query[0].url=jdbc:mysql://127.0.0.1:3306/cas?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
#
##数据库dialect配置
#cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.MySQLDialect
#
##数据库用户名
#cas.authn.jdbc.query[0].user=root
#
##数据库用户密码
#cas.authn.jdbc.query[0].password=123
#
##数据库事务自动提交
#cas.authn.jdbc.query[0].autocommit=false
#
##数据库驱动
#cas.authn.jdbc.query[0].driverClass=com.mysql.jdbc.Driver
#
##超时配置
#cas.authn.jdbc.query[0].idleTimeout=5000
#
##默认加密策略，通过encodingAlgorithm来指定算法，默认NONE不加密
## NONE|DEFAULT|STANDARD|BCRYPT|SCRYPT|PBKDF2
#cas.authn.jdbc.query[0].passwordEncoder.type=net.anumbrella.sso.MyPasswordEncoder
## 字符类型
#cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=UTF-8
## 加密算法
#cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm=MD5
## 加密盐
##cas.authn.jdbc.query[0].passwordEncoder.secret=
## 加密字符长度
##cas.authn.jdbc.query[0].passwordEncoder.strength=16


##
# 白名单——file配置
#
#cas.authn.file.separator=::
#cas.authn.file.filename=file:///Users/anumbrella/file
#cas.authn.file.name=


##
# 白名单——json配置
#
#cas.authn.json.location=file:///Users/anumbrella/file.json
#cas.authn.json.name=


##
# 黑名单配置
#
#cas.authn.reject.users=test, anumbrella
#cas.authn.reject.name=


##
# Shiro配置
#
#允许登录的用户，必须要有以下权限，否则拒绝，多个逗号隔开
#cas.authn.shiro.requiredPermissions=staff
#允许登录的用户，必须要有以下角色，否则拒绝，多个逗号隔开
#cas.authn.shiro.requiredRoles=developer
#shir配置文件位置
#cas.authn.shiro.location=classpath:shiro.ini
#shiro name 唯一
#cas.authn.shiro.name=

##
# Rest配置
#

#请求远程调用接口,相当于远程获取数据源
#http://127.0.0.1:8081/cas-rest/user/login
cas.authn.rest.uri=http://localhost:8002/api-auth/cas
#加密策略
cas.authn.rest.passwordEncoder.type=DEFAULT
cas.authn.rest.passwordEncoder.characterEncoding=UTF-8
#加密算法
cas.authn.rest.passwordEncoder.encodingAlgorithm=MD5



cas.tgc.secure=false
cas.serviceRegistry.initFromJson=true